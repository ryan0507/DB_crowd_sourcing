{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jominju/Desktop/DB_crowd_sourcing/catalog/templates/catalog/my-app/src/pages/admin/admin_fileDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nconst columns = [{\n  id: 'name',\n  label: '음식점\\u00a0이름'\n}, {\n  id: 'salary',\n  label: '월\\u00a0매출'\n}, {\n  id: 'customer',\n  label: '월\\u00a0고객\\u00a0수'\n}, {\n  id: 'money',\n  label: '순\\u00a0이익'\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '1000px',\n    marginTop: '100px'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nfunction createData(name, salary, customer, money) {\n  return {\n    name,\n    salary,\n    customer,\n    money\n  };\n}\n\nconst rows = [createData('새마을식당', 30000000, 60000, 4500000), createData('새마을식당', 30000000, 60000, 4500000)];\nexport default function Admin_fileDetail() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Title\",\n      children: \"file name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/taskinfo\",\n      className: \"right_side_small\",\n      children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                align: 'center',\n                style: {\n                  minWidth: column.minWidth,\n                  fontSize: '16px',\n                  fontWeight: 'bold'\n                },\n                children: column.label\n              }, column.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: \"center\",\n                    style: {\n                      fontSize: '14px',\n                      fontWeight: 'normal'\n                    },\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 35\n                  }, this);\n                })\n              }, row.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 20, 30],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onChangePage: handleChangePage,\n        onChangeRowsPerPage: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Admin_fileDetail, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Admin_fileDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin_fileDetail\");","map":{"version":3,"sources":["/Users/jominju/Desktop/DB_crowd_sourcing/catalog/templates/catalog/my-app/src/pages/admin/admin_fileDetail.tsx"],"names":["Link","React","makeStyles","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Paper","columns","id","label","useStyles","root","width","marginTop","container","maxHeight","createData","name","salary","customer","money","rows","Admin_fileDetail","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","minWidth","fontSize","fontWeight","slice","row","format","length"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Route,Link } from 'react-router-dom';\nimport React from 'react';\nimport table from '../table';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\n\ninterface Column {\n  id: 'name' | 'salary' | 'customer' | 'money' ;\n  label: string;\n  minWidth?: number;\n  align?: 'center';\n  alignment?: 'center';\n  format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n  { id: 'name', label: '음식점\\u00a0이름'},\n  { id: 'salary', label: '월\\u00a0매출' },\n  { id: 'customer',label: '월\\u00a0고객\\u00a0수'},\n  {id: 'money',label: '순\\u00a0이익',},\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '1000px',\n      marginTop: '100px',\n  },\n  container: {\n    maxHeight: 440,\n  }\n});\n\n\ninterface Data {\n  name: string;\n  salary: number;\n  customer: number;\n  money: number;\n}\n\nfunction createData( name: string, salary: number, customer: number,money: number): Data {\n  return { name, salary, customer, money };\n}\n\nconst rows = [\n  createData('새마을식당', 30000000,  60000, 4500000),\n  createData('새마을식당', 30000000,  60000, 4500000),\n];\n\nexport default function Admin_fileDetail(){\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n   return(\n       <div className=\"wrapper\">\n           <div className=\"Title\">file name</div>\n           <Link to = \"/admin/taskinfo\" className=\"right_side_small\">뒤로가기</Link>\n           <Paper className={classes.root}>\n              <TableContainer className={classes.container}>\n                <Table stickyHeader aria-label=\"sticky table\">\n                  <TableHead>\n                    <TableRow>\n                      {columns.map((column) => (\n                        <TableCell\n                          key={column.id}\n                          align={'center'}\n                          style={{ minWidth: column.minWidth, fontSize: '16px', fontWeight: 'bold' }}\n                        >\n                          {column.label}\n                        </TableCell>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                      return (\n                        <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.name}>\n                          {columns.map((column) => {\n                              const value = row[column.id];\n                              return (\n                                  <TableCell key={column.id} align='center'\n                                  style={{fontSize: '14px', fontWeight: 'normal' }}>\n                                      {column.format && typeof value === 'number' ? column.format(value) : value}\n                                  </TableCell>\n                                );\n                            }\n                          )}\n                        </TableRow>\n                      );\n                    })}\n                  </TableBody>\n                </Table>\n              </TableContainer>\n              <TablePagination\n                rowsPerPageOptions={[10, 20, 30]}\n                component=\"div\"\n                count={rows.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onChangePage={handleChangePage}\n                onChangeRowsPerPage={handleChangeRowsPerPage}\n              />\n            </Paper>\n\n       </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}