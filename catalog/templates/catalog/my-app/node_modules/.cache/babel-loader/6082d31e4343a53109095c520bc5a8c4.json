{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/jominju/Desktop/db_rating/my-app/src/pages/admin/admin_estimatorDetail.tsx\",\n    _s = $RefreshSig$();\n\nimport { Link } from 'react-router-dom';\nimport React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\nconst columns = [{\n  id: 'taskname',\n  label: '태스크\\u00a0이름'\n}, {\n  id: 'estimatedate',\n  label: '제출일',\n  minWidth: 80\n}, {\n  id: 'estimatetime',\n  label: '제출시간'\n}, {\n  id: 'presenter',\n  label: '제출자'\n}, {\n  id: 'fileName',\n  label: '평가\\u00a0파일명'\n}, {\n  id: 'presenterScore',\n  label: '제출자\\u00a0점수'\n}, {\n  id: 'pNp',\n  label: 'Pass\\u00a0여부'\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%'\n  },\n  container: {\n    maxHeight: 440\n  }\n});\n\nfunction createData(taskname, estimatedate, estimatetime, presenter, fileName, presenterScore, pNp) {\n  return {\n    taskname,\n    estimatedate,\n    estimatetime,\n    presenter,\n    fileName,\n    presenterScore,\n    pNp\n  };\n}\n\nconst rows = [createData('음식점', '20.11.02', '23 : 15 : 20', '박선종', '음악은_즐거워.csv', '4점', 'Non-pass'), createData('음식점', '20.11.02', '23 : 15 : 20', '박선종', '음악은_즐거워.csv', '4점', 'Non-pass')];\nexport default function Admin_presenterDetail() {\n  _s();\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"estimatorDetail\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Title\",\n        children: \"\\uD3C9\\uAC00\\uC790 ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/admin/main\",\n        className: \"right_side_small\",\n        children: \"\\uB4A4\\uB85C\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"formContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"taskStatistic\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"submitFiles\",\n            children: [\"\\uC81C\\uCD9C\\uD55C \\uD30C\\uC77C \\uC218 : \", rows.length, \"\\uAC1C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"passFiles\",\n            children: \"Pass\\uB41C \\uD30C\\uC77C \\uC218 : 0\\uAC1C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 24\n          }, this), /*#__PURE__*/_jsxDEV(Paper, {\n            className: classes.root,\n            style: {\n              display: 'inline-block'\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n              className: classes.container,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                stickyHeader: true,\n                \"aria-label\": \"sticky table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: 'center',\n                      style: {\n                        minWidth: column.minWidth,\n                        fontSize: '16px',\n                        fontWeight: 'bold'\n                      },\n                      children: column.label\n                    }, column.id, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 37\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 33\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 31\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      role: \"checkbox\",\n                      tabIndex: -1,\n                      children: columns.map(column => {\n                        const value = row[column.id];\n\n                        if (column.id == \"fileName\") {\n                          return /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"center\",\n                            style: {\n                              fontSize: '14px',\n                              fontWeight: 'normal',\n                              color: 'black'\n                            },\n                            children: /*#__PURE__*/_jsxDEV(Link, {\n                              to: \"/admin/filedetail\",\n                              children: column.format && typeof value === 'number' ? column.format(value) : value\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 116,\n                              columnNumber: 53\n                            }, this)\n                          }, column.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 114,\n                            columnNumber: 47\n                          }, this);\n                        } else {\n                          return /*#__PURE__*/_jsxDEV(TableCell, {\n                            align: \"center\",\n                            style: {\n                              fontSize: '14px',\n                              fontWeight: 'normal'\n                            },\n                            children: column.format && typeof value === 'number' ? column.format(value) : value\n                          }, column.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 123,\n                            columnNumber: 47\n                          }, this);\n                        }\n                      })\n                    }, row.estimatetime, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 109,\n                      columnNumber: 37\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 31\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [10, 20, 30],\n              component: \"div\",\n              count: rows.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onChangePage: handleChangePage,\n              onChangeRowsPerPage: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 24\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 8\n  }, this);\n}\n\n_s(Admin_presenterDetail, \"1LSjuq2DZUwZxE9BYIdgLLfYYP4=\", false, function () {\n  return [useStyles];\n});\n\n_c = Admin_presenterDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin_presenterDetail\");","map":{"version":3,"sources":["/Users/jominju/Desktop/db_rating/my-app/src/pages/admin/admin_estimatorDetail.tsx"],"names":["Link","React","makeStyles","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","Paper","columns","id","label","minWidth","useStyles","root","width","container","maxHeight","createData","taskname","estimatedate","estimatetime","presenter","fileName","presenterScore","pNp","rows","Admin_presenterDetail","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","length","display","map","column","fontSize","fontWeight","slice","row","color","format"],"mappings":"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","sourcesContent":["import { BrowserRouter as Router, Route,Link } from 'react-router-dom';\nimport React from 'react';\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport Paper from \"@material-ui/core/Paper\";\n\ninterface Column {\n  id:  'taskname'| 'estimatedate' | 'estimatetime' | 'presenter' | 'fileName' | 'presenterScore' | 'pNp';\n  label: string;\n  minWidth?: number;\n  align?: 'center';\n  alignment?: 'center';\n  format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n    {id: 'taskname', label: '태스크\\u00a0이름'},\n  { id: 'estimatedate', label: '제출일', minWidth: 80 },\n  {\n    id: 'estimatetime',\n    label: '제출시간',\n  },\n    {id: 'presenter', label: '제출자'},\n  {\n    id: 'fileName',\n    label: '평가\\u00a0파일명',\n  },\n    {id: 'presenterScore', label: '제출자\\u00a0점수'},\n  {\n    id: 'pNp',\n    label: 'Pass\\u00a0여부',\n  },\n];\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n  }\n});\n\n\ninterface Data {\n    taskname: string,\n  estimatedate: string;\n  estimatetime: string;\n  presenter: string,\n  fileName: string;\n  presenterScore: string,\n  pNp: string;\n}\n\nfunction createData( taskname: string, estimatedate: string, estimatetime: string, presenter: string, fileName: string, presenterScore:string, pNp: string): Data {\n  return { taskname, estimatedate, estimatetime, presenter, fileName, presenterScore, pNp };\n}\n\nconst rows = [\n  createData('음식점','20.11.02', '23 : 15 : 20','박선종', '음악은_즐거워.csv', '4점', 'Non-pass'),\n  createData('음식점','20.11.02', '23 : 15 : 20','박선종', '음악은_즐거워.csv', '4점', 'Non-pass'),\n];\n\nexport default function Admin_presenterDetail(){\n    const classes = useStyles();\n    const [page, setPage] = React.useState(0);\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\n    const handleChangePage = (event: unknown, newPage: number) => {\n        setPage(newPage);\n    };\n    const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setRowsPerPage(+event.target.value);\n        setPage(0);\n    };\n   return(\n       <div className={\"estimatorDetail\"}>\n       <div className=\"wrapper\">\n           <div className=\"Title\">평가자 ID</div>\n           <Link to = \"/admin/main\" className=\"right_side_small\">뒤로가기</Link>\n           <div className=\"formContent\">\n               <div className={\"taskStatistic\"}>\n                       <div className={\"submitFiles\"}>제출한 파일 수 : {rows.length}개</div>\n                       <div className={\"passFiles\"}>Pass된 파일 수 : 0개</div>\n                       <Paper className={classes.root} style={{display: 'inline-block'}}>\n                          <TableContainer className={classes.container}>\n                            <Table stickyHeader aria-label=\"sticky table\">\n                              <TableHead>\n                                <TableRow>\n                                  {columns.map((column) => (\n                                    <TableCell\n                                      key={column.id}\n                                      align={'center'}\n                                      style={{ minWidth: column.minWidth,  fontSize: '16px', fontWeight: 'bold',  }}\n                                    >\n                                      {column.label}\n                                    </TableCell>\n                                  ))}\n                                </TableRow>\n                              </TableHead>\n                              <TableBody>\n                                {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                                  return (\n                                    <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.estimatetime}>\n                                      {columns.map((column) => {\n                                        const value = row[column.id];\n                                        if (column.id == \"fileName\"){\n                                           return (\n                                              <TableCell key={column.id} align='center'\n                                                  style={{fontSize: '14px', fontWeight: 'normal', color:'black' }}>\n                                                    <Link to =\"/admin/filedetail\">\n                                                        {column.format && typeof value === 'number' ? column.format(value) : value}\n                                                    </Link>\n                                              </TableCell>\n                                            );\n                                        }else{\n                                            return (\n                                              <TableCell key={column.id} align='center'\n                                              style={{fontSize: '14px', fontWeight: 'normal' }}>\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                                              </TableCell>\n                                            );\n                                        }\n                                      })}\n                                    </TableRow>\n                                  );\n                                })}\n                              </TableBody>\n                            </Table>\n                          </TableContainer>\n                          <TablePagination\n                            rowsPerPageOptions={[10, 20, 30]}\n                            component=\"div\"\n                            count={rows.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onChangePage={handleChangePage}\n                            onChangeRowsPerPage={handleChangeRowsPerPage}\n                          />\n                        </Paper>\n                   </div>\n               </div>\n           </div>\n       </div>\n   );\n}\n"]},"metadata":{},"sourceType":"module"}